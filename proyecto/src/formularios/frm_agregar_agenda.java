/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package formularios;

import clases.clase_agendamiento;
import clases.clase_conexion;
import clases.clase_consultas;
import clases.clase_horario;
import clases.clase_personal;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.SimpleDateFormat;
import java.time.Instant;
import java.util.Calendar;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;

/**
 *
 * @author Family
 */
public class frm_agregar_agenda extends javax.swing.JFrame {
    DefaultComboBoxModel value;
    //String rut_personal="";
    //String id_hora="";
    //String id_fecha="";
    String fecha="";
    //String nombre_perso="";
    //String hora="";
    String tipo="";
     clase_conexion cc= new clase_conexion();
    clase_consultas consultas=new clase_consultas ();
clase_horario ch=new clase_horario(null, null);
clase_personal cp=new clase_personal(null, null);
    clase_agendamiento ca=new clase_agendamiento();
    public String getTipo() {
        return tipo;
    }

    public void setTipo(String tipo) {
        this.tipo = tipo;
    }

    
    
   
    public frm_agregar_agenda(){
       initComponents();
        formato_fecha();
        //cargar_horario();
       // cargar_personal();
        
    }
  
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        cbx_personal = new javax.swing.JComboBox<clase_personal>();
        jLabel5 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        cbx_hora = new javax.swing.JComboBox();
        bt_agendar = new javax.swing.JButton();
        txt_rut = new javax.swing.JTextField();
        calendario = new com.toedter.calendar.JDateChooser();
        jButton1 = new javax.swing.JButton();
        bt_Eliminar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setText("Agregar Agendamiento");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 10, -1, -1));

        jLabel2.setText("Fecha:");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 70, -1, -1));

        jLabel3.setText("Hora:");
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 70, -1, -1));

        cbx_personal.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbx_personalItemStateChanged(evt);
            }
        });
        cbx_personal.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cbx_personalMouseClicked(evt);
            }
        });
        cbx_personal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbx_personalActionPerformed(evt);
            }
        });
        jPanel1.add(cbx_personal, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 160, 210, -1));

        jLabel5.setText("Rut Participante");
        jPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 110, -1, -1));

        jLabel7.setText("Seleccionar Personal");
        jPanel1.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 160, -1, -1));

        cbx_hora.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbx_horaItemStateChanged(evt);
            }
        });
        cbx_hora.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cbx_horaMouseClicked(evt);
            }
        });
        jPanel1.add(cbx_hora, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 70, 80, -1));

        bt_agendar.setText("Agendar");
        bt_agendar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_agendarActionPerformed(evt);
            }
        });
        jPanel1.add(bt_agendar, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 220, -1, -1));
        jPanel1.add(txt_rut, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 110, 120, -1));
        jPanel1.add(calendario, new org.netbeans.lib.awtextra.AbsoluteConstraints(107, 70, 110, -1));
        calendario.getDateEditor().addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt){
                if(tipo.equals("1")){
                    limpiar();
                    captura_fecha();
                    cargar_horario();
                    cargar_personal();
                }
                if(tipo.equals("2")){

                }
            }
        });

        jButton1.setText("Buscar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 110, -1, -1));

        bt_Eliminar.setText("Eliminar");
        jPanel1.add(bt_Eliminar, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 220, -1, -1));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 397, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 330, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cbx_personalItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbx_personalItemStateChanged
        if(tipo.equals("1")){
        limpiar();
        capturar_hora();
        captura_fecha();
        capturar_personal();
        
        //System.out.println(rut_personal);
        }
        
         
         
    }//GEN-LAST:event_cbx_personalItemStateChanged

    private void cbx_personalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbx_personalActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbx_personalActionPerformed

    private void cbx_horaItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbx_horaItemStateChanged
        if(tipo.equals("1")){
        limpiar();
        capturar_hora();
        captura_fecha();
        cargar_personal();
        capturar_personal();
        }
        
        
  
    }//GEN-LAST:event_cbx_horaItemStateChanged

    private void bt_agendarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_agendarActionPerformed
                            //System.out.println(id_fecha);
                            //System.out.println(id_hora);
                            //System.out.println(rut_personal);
                            
                            System.out.println(ch.getId());
                            System.out.println(cp.getPerso_id());
        if(cp.getPerso_id().equals("")){
            JOptionPane.showMessageDialog(null, "No hay pesronal suficiente.\n Selecciona otro horario");
        }else{
             ca.setRut_participante(this.txt_rut.getText());
             //System.out.println(consultas.getRut_participante());
             consultas.buscar_agenda();
             
             //System.out.println(consultas.getRst_r());
             if(consultas.getRst_r().equals("si")){
                    int rsp=JOptionPane.showConfirmDialog(null, "El Participante ya esta ingresado con\n"
                            + "Fecha: "+ca.getAgend_fecha()+"\nHora: "+ch.getHorar_hora()+"\nÂ¿Desea Modifificar?");
                    if(JOptionPane.OK_OPTION==rsp){
                        try {
                            //System.out.println(id_fecha);
                            //System.out.println(id_hora);
                            //System.out.println(rut_personal);
                            
                              //consultas.setId_fecha(this.id_fecha);
                              //ch.setId(this.id_hora);
                              //cp.setPerso_id(this.rut_personal);
                              //consultas.setRut_perso(this.rut_personal);
                              ca.setRut_participante(this.txt_rut.getText());
                              consultas.actualizar_agendamiento();
                            JOptionPane.showMessageDialog(null, "Agenda Actualizada");
                        } catch (SQLException ex) {
                            Logger.getLogger(frm_agregar_agenda.class.getName()).log(Level.SEVERE, null, ex);
                        }
                    }else{
                        
                        formato_fecha();
                        txt_rut.setText("");
                        }
               }else{
                        try {
                            //System.out.println(id_fecha);
                           // System.out.println(id_hora);
                            //System.out.println(rut_personal);
                              //consultas.setId_fecha(this.id_fecha);
                              //ch.setId(this.id_hora);
                              //cp.setPerso_id(this.rut_personal);
                              //consultas.setRut_perso(this.rut_personal);
                              ca.setRut_participante(this.txt_rut.getText());
                              consultas.grabar_agendamiento();
                              consultas.ultimo_agendamiento();
                              consultas.grabar_agendamiento_horar();
                              consultas.grabar_agendamiento_perso();
                              limpiar();
                          } catch (SQLException ex) {
                              Logger.getLogger(frm_agregar_agenda.class.getName()).log(Level.SEVERE, null, ex);
                          }
                        }
        }
    }//GEN-LAST:event_bt_agendarActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
      /* try { 
       
        consultas.setRut_participante(this.txt_rut.getText());
        System.out.println(consultas.getRut_participante());
        consultas.buscar_agenda();
        
         
        this.id_fecha=consultas.getId_fecha();
         this.hora=consultas.getId_hora();
         this.nombre_perso=consultas.getNombre_perso();
        
            
            SimpleDateFormat formato =new SimpleDateFormat("dd/MM/yyyy");
            Date fechaDate =formato.parse(this.id_fecha);
            calendario.setDate(fechaDate);
            System.out.println(hora);
            limpiar_cbx();
            cbx_personal.addItem(new clase_personal(null, nombre_perso));
            cbx_hora.addItem(hora);
            
            
        } catch (Exception e) {
            System.out.println(e);
        }
        this.nombre_perso="";
            this.hora="";*/
    }//GEN-LAST:event_jButton1ActionPerformed

    private void cbx_horaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cbx_horaMouseClicked
      
    }//GEN-LAST:event_cbx_horaMouseClicked

    private void cbx_personalMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cbx_personalMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_cbx_personalMouseClicked

    public void cargar_personal(){
     
        try {
            Connection c= cc.conectar();
            Statement st= c.createStatement();
            
            ResultSet rs= st.executeQuery("SELECT * FROM personal "
                    + "WHERE perso_id  NOT IN(SELECT p.perso_id FROM agendamientos a, horarios_agendamientos h, personal_agendamientos p "
                    + "WHERE a.agend_fecha= '"+ca.getAgend_fecha()+"' AND a.agend_id=h.agend_id AND h.id='"+ch.getId()+"' AND a.agend_id=p.agend_id)");
            DefaultComboBoxModel formato_cbx = new DefaultComboBoxModel();
            
            
            while (rs.next()) {
                System.out.println(rs);
              formato_cbx.addElement(new clase_personal(rs.getString("perso_id"), rs.getString("perso_nombre")));
            }
            cbx_personal.setModel(formato_cbx);
            c.close();
            capturar_personal();
        } catch (Exception e) {
            System.out.println(e);
        }
    
    
    }
     public void cargar_horario(){        
        try {
            Connection c= cc.conectar();
            Statement st= c.createStatement();
            
            ResultSet rs= st.executeQuery("SELECT * FROM horarios");
            DefaultComboBoxModel formato_cbx = new DefaultComboBoxModel();
            
            while (rs.next()) {
              formato_cbx.addElement(new clase_horario(rs.getString("id"), rs.getString("horar_hora")));
              
            }
            
            cbx_hora.setModel(formato_cbx);
            c.close();
            capturar_hora();
        } catch (Exception e) {
            System.out.println(e);
        
        
     }  
        
        
        
     }
     
     public void formato_fecha(){
        
  
        try {
                calendario.getDateFormatString();
            this.calendario.setDate(Date.from(Instant.now()));
  
        } catch (Exception e) {
            System.out.println(e);
        }
        
        
    }
     public void capturar_hora(){
     
     ch=(clase_horario) cbx_hora.getSelectedItem();
            //this.id_hora=ch.getId();
     
     }
     public void captura_fecha(){
         try {
             String aÃ±o=String.valueOf(calendario.getCalendar().get(Calendar.YEAR));
        String mes=String.valueOf(calendario.getCalendar().get(Calendar.MONTH)+1);
        String dia=String.valueOf(calendario.getCalendar().get(Calendar.DAY_OF_MONTH));
        if(dia.length()==1){
        dia=("0".concat(dia));
        }
        if(mes.length()==1){
        mes=("0".concat(mes));
        }
        
        this.fecha=dia+"/"+mes+"/"+aÃ±o;
       
         } catch (Exception e) {
             System.out.println(e);
         }
     }
       public void capturar_personal(){
       
       cp=(clase_personal) cbx_personal.getSelectedItem();
        //this.rut_personal=cp.getPerso_id();
      
    }
       
       public void limpiar(){
       //this.rut_personal="";
    //this.id_hora="";
    //this.id_fecha="";
       
       }
       
    public void limpiar_cbx(){
       cbx_hora.removeAllItems();
       cbx_personal.removeAllItems();
       
       }
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JButton bt_Eliminar;
    public javax.swing.JButton bt_agendar;
    public com.toedter.calendar.JDateChooser calendario;
    public javax.swing.JComboBox cbx_hora;
    public javax.swing.JComboBox<clase_personal> cbx_personal;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    public javax.swing.JTextField txt_rut;
    // End of variables declaration//GEN-END:variables

    
}
